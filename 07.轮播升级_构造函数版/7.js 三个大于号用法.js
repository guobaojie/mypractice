/** 
 * js中的无符号位移使用 三个大于号来表示的
 *   
 *  二进制运算。十进制返回
 * 
 * 什么是无符号位移？ 1统统向后移动
 * 
 * 
 */
//意思是： 将100的二进制（01100100）向右移动2位（00011001）
100>>>2
//结果00011001 -->结果是25


/** 
 * 有符号位移（>>>)
 * 
 *  什么是有符号位移？
 *  为正数时位移后在前面补0，为负数时则在位移后在前面补1
 */
-100>>2

/** 
 * -100的二进制为-_-好长。1111111111111111111111111111111111111111111111111111111111111100
 *移除最后2位后11111111111111111111111111111111111111111111111111111111111111
 *之后在前面补两位1111111111111111111111111111111111111111111111111111111111111111
 *变为十进制后结果为-1
 */

/** 
 *   二进制 十进制 转换
 * 
 *   42除以2得到的余数分别为010101，然后咱们倒着排一下，42所对应二进制就是101010
 * 计算机内部表示数的字节单位是定长的，如8位，16位，或32位。所以，位数不够时，高位补零.
 *  即规范的写法为（42）10=（00101010）
 * 
 * 负整数转换成二进制

        方法：先是将对应的正整数转换成二进制后，对二进制取反，然后对结果再加一。
        还以42为例，负整数就是-42，如图4所示为方法解释。最后即为：（-42）10=（11010110）
 * 
 */